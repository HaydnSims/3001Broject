// Group 22 - Tyler, Haydn, and Clayton Final project - Morse code translator
// Due April 12th at 11:59 pm (Tuesday)

// This layout will only serve as a logical template
// to gve an idea of how the code will operate at
// a basic level, we can add bits and snips of code
// as we go using the pull requests from guthub
// its super useful i reccomended we do it strongly
// so that we can work on it simoultaniously
// without having to directly share

// Includes
#include <Arduino.h>
#include <avr_debugger.h>
#include <stdio.h>
//#include "UART.h"

// Function Prototypes

// Defines
#define LEDR DDC5 // Red LED is connected to Pin PC5
#define LEDB DDC3 // Blue LED is connected to Pin PC3
#define LEDY DDC2 // Yellow LED is connected to Pin PC2
#define LEDG DDC1 // Green LED is connected to Pin PC1
#define SERV DDC4 // Servo is connected to Pin PC4
#define BUZZ DDD0 // Buzzer is connected to Pin PD0


int main()
{
  // Main logical steps and functions calls in here
  // Intitial conditions
  // Button initialization




  // 7 Segment initialization
const uint8_t num[10] = {0b01111111, 0b00010011, 0b10111101, 0b10110111, 0b11010011, 0b11100111, 0b11101111, 0b00110011, 0b11111111, 0b11110111}; 
                          // 0        // 1        // 2        // 3        // 4        // 5        // 6        // 7        // 8        // 9
  DDRB |= 0xFF;                           // Set all pins of Port B as OUTPUT (7-segment)
  DDRB |= (1 << LEDG);               // Set pin 11 of PortB to output (LED)
  DDRB |= (1 << LEDY);              // Set pin 12 of PortB to output (LED)
  DDRB |= (1 << LEDR);                 // Set pin 13 of PortB to output (LED)
  DDRC &= ~(1 << BUTTON);                 // Set pin A4 of PortC to INPUT
  PORTC |= (1 << BUTTON);                 // Set Button pin of PORTC Register



  while(1)
  {
    // Step 1:

    // Step 2:

    // Step 3:

    // Step 4:

    // Extra features:
  }
}







// functions to use in main
void delayMs(uint16_t ms)
{
  while (ms > 0)
  {
    _delay_ms(1);
    ms--;
  }
}
